{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport morphdom from 'morphdom';\nimport CableReady from '..';\nimport SubscribingElement from './subscribing_element';\nimport { shouldMorph } from '../morph_callbacks';\nimport activeElement from '../active_element';\nimport { debounce, assignFocus, dispatch, graciouslyFetch } from '../utils';\nvar template = \"\\n<style>\\n  :host {\\n    display: block;\\n  }\\n</style>\\n<slot></slot>\\n\";\n\nfunction url(ele) {\n  return ele.hasAttribute('url') ? ele.getAttribute('url') : location.href;\n}\n\nvar UpdatesForElement = /*#__PURE__*/function (_SubscribingElement) {\n  _inherits(UpdatesForElement, _SubscribingElement);\n\n  var _super = _createSuper(UpdatesForElement);\n\n  function UpdatesForElement() {\n    var _this;\n\n    _classCallCheck(this, UpdatesForElement);\n\n    _this = _super.call(this);\n\n    var shadowRoot = _this.attachShadow({\n      mode: 'open'\n    });\n\n    shadowRoot.innerHTML = template;\n    return _this;\n  }\n\n  _createClass(UpdatesForElement, [{\n    key: \"connectedCallback\",\n    value: function () {\n      var _connectedCallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var consumer;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.preview) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                this.update = debounce(this.update.bind(this), this.debounce);\n                _context.next = 5;\n                return CableReady.consumer;\n\n              case 5:\n                consumer = _context.sent;\n\n                if (consumer) {\n                  this.createSubscription(consumer, 'CableReady::Stream', this.update);\n                } else {\n                  console.error('The `updates-for` helper cannot connect without an ActionCable consumer.\\nPlease run `rails generate cable_ready:helpers` to fix this.');\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function connectedCallback() {\n        return _connectedCallback.apply(this, arguments);\n      }\n\n      return connectedCallback;\n    }()\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data) {\n        var _this2 = this;\n\n        var identifier, query, blocks, only, html, template, _loop, i, _ret;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                identifier = this.getAttribute('identifier');\n                query = \"updates-for[identifier=\\\"\".concat(identifier, \"\\\"]\");\n                blocks = document.querySelectorAll(query);\n\n                if (!(blocks[0] !== this)) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 5:\n                only = this.getAttribute('only');\n\n                if (!(only && data.changed && !only.split(' ').some(function (attribute) {\n                  return data.changed.includes(attribute);\n                }))) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 8:\n                html = {};\n                template = document.createElement('template');\n                _loop = /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(i) {\n                  var response, fragments, operation;\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          blocks[i].setAttribute('updating', 'updating');\n\n                          if (html.hasOwnProperty(url(blocks[i]))) {\n                            _context2.next = 8;\n                            break;\n                          }\n\n                          _context2.next = 4;\n                          return graciouslyFetch(url(blocks[i]), {\n                            'X-Cable-Ready': 'update'\n                          });\n\n                        case 4:\n                          response = _context2.sent;\n                          _context2.next = 7;\n                          return response.text();\n\n                        case 7:\n                          html[url(blocks[i])] = _context2.sent;\n\n                        case 8:\n                          template.innerHTML = String(html[url(blocks[i])]).trim();\n                          _context2.next = 11;\n                          return _this2.resolveTurboFrames(template.content);\n\n                        case 11:\n                          fragments = template.content.querySelectorAll(query);\n\n                          if (!(fragments.length <= i)) {\n                            _context2.next = 15;\n                            break;\n                          }\n\n                          console.warn('Update aborted due to mismatched number of elements');\n                          return _context2.abrupt(\"return\", {\n                            v: void 0\n                          });\n\n                        case 15:\n                          activeElement.set(document.activeElement);\n                          operation = {\n                            element: blocks[i],\n                            html: fragments[i],\n                            permanentAttributeName: 'data-ignore-updates'\n                          };\n                          dispatch(blocks[i], 'cable-ready:before-update', operation);\n                          morphdom(blocks[i], fragments[i], {\n                            childrenOnly: true,\n                            onBeforeElUpdated: shouldMorph(operation),\n                            onElUpdated: function onElUpdated(_) {\n                              blocks[i].removeAttribute('updating');\n                              dispatch(blocks[i], 'cable-ready:after-update', operation);\n                              assignFocus(operation.focusSelector);\n                            }\n                          });\n\n                        case 19:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                });\n                i = 0;\n\n              case 12:\n                if (!(i < blocks.length)) {\n                  _context3.next = 20;\n                  break;\n                }\n\n                return _context3.delegateYield(_loop(i), \"t0\", 14);\n\n              case 14:\n                _ret = _context3.t0;\n\n                if (!(_typeof(_ret) === \"object\")) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", _ret.v);\n\n              case 17:\n                i++;\n                _context3.next = 12;\n                break;\n\n              case 20:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function update(_x) {\n        return _update.apply(this, arguments);\n      }\n\n      return update;\n    }()\n  }, {\n    key: \"resolveTurboFrames\",\n    value: function () {\n      var _resolveTurboFrames = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(documentFragment) {\n        var _this3 = this;\n\n        var reloadingTurboFrames;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                reloadingTurboFrames = _toConsumableArray(documentFragment.querySelectorAll('turbo-frame[src]:not([loading=\"lazy\"])'));\n                return _context5.abrupt(\"return\", Promise.all(reloadingTurboFrames.map(function (frame) {\n                  return new Promise( /*#__PURE__*/function () {\n                    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(resolve) {\n                      var frameResponse, frameTemplate;\n                      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                        while (1) {\n                          switch (_context4.prev = _context4.next) {\n                            case 0:\n                              _context4.next = 2;\n                              return graciouslyFetch(frame.getAttribute('src'), {\n                                'Turbo-Frame': frame.id,\n                                'X-Cable-Ready': 'update'\n                              });\n\n                            case 2:\n                              frameResponse = _context4.sent;\n                              frameTemplate = document.createElement('template');\n                              _context4.next = 6;\n                              return frameResponse.text();\n\n                            case 6:\n                              frameTemplate.innerHTML = _context4.sent;\n                              _context4.next = 9;\n                              return _this3.resolveTurboFrames(frameTemplate.content);\n\n                            case 9:\n                              documentFragment.querySelector(\"turbo-frame#\".concat(frame.id)).innerHTML = String(frameTemplate.content.querySelector(\"turbo-frame#\".concat(frame.id)).innerHTML).trim();\n                              resolve();\n\n                            case 11:\n                            case \"end\":\n                              return _context4.stop();\n                          }\n                        }\n                      }, _callee4);\n                    }));\n\n                    return function (_x3) {\n                      return _ref.apply(this, arguments);\n                    };\n                  }());\n                })));\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function resolveTurboFrames(_x2) {\n        return _resolveTurboFrames.apply(this, arguments);\n      }\n\n      return resolveTurboFrames;\n    }()\n  }, {\n    key: \"debounce\",\n    get: function get() {\n      return this.hasAttribute('debounce') ? parseInt(this.getAttribute('debounce')) : 20;\n    }\n  }]);\n\n  return UpdatesForElement;\n}(SubscribingElement);\n\nexport { UpdatesForElement as default };","map":null,"metadata":{},"sourceType":"module"}